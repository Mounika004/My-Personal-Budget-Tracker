{"ast":null,"code":"import axios from \"axios\";\n\n// Relative base URL → works with CRA proxy in dev and same-origin in prod\nexport const instance = axios.create({\n  baseURL: \"/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  timeout: 10000\n});\nexport default function setAuthorizationToken(token) {\n  if (token) instance.defaults.headers.common.Authorization = `Bearer ${token}`;else delete instance.defaults.headers.common.Authorization;\n}\n\n// Helpful in dev to see real server error messages\nif (process.env.NODE_ENV === \"development\") {\n  instance.interceptors.response.use(res => res, err => {\n    var _err$response, _err$response2, _err$config, _err$config2;\n    console.error(\"API error:\", {\n      status: err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status,\n      data: err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data,\n      url: err === null || err === void 0 ? void 0 : (_err$config = err.config) === null || _err$config === void 0 ? void 0 : _err$config.url,\n      method: err === null || err === void 0 ? void 0 : (_err$config2 = err.config) === null || _err$config2 === void 0 ? void 0 : _err$config2.method\n    });\n    return Promise.reject(err);\n  });\n}","map":{"version":3,"names":["axios","instance","create","baseURL","headers","timeout","setAuthorizationToken","token","defaults","common","Authorization","process","env","NODE_ENV","interceptors","response","use","res","err","_err$response","_err$response2","_err$config","_err$config2","console","error","status","data","url","config","method","Promise","reject"],"sources":["/Users/queen/Downloads/Budget Tracker/client/src/utils/AxiosConfig.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Relative base URL → works with CRA proxy in dev and same-origin in prod\r\nexport const instance = axios.create({\r\n  baseURL: \"/api\",\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n  timeout: 10000,\r\n});\r\n\r\nexport default function setAuthorizationToken(token) {\r\n  if (token) instance.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  else delete instance.defaults.headers.common.Authorization;\r\n}\r\n\r\n// Helpful in dev to see real server error messages\r\nif (process.env.NODE_ENV === \"development\") {\r\n  instance.interceptors.response.use(\r\n    (res) => res,\r\n    (err) => {\r\n      console.error(\"API error:\", {\r\n        status: err?.response?.status,\r\n        data: err?.response?.data,\r\n        url: err?.config?.url,\r\n        method: err?.config?.method,\r\n      });\r\n      return Promise.reject(err);\r\n    }\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EACnCC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC/CC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,eAAe,SAASC,qBAAqBA,CAACC,KAAK,EAAE;EACnD,IAAIA,KAAK,EAAEN,QAAQ,CAACO,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAACC,aAAa,GAAG,UAAUH,KAAK,EAAE,CAAC,KACzE,OAAON,QAAQ,CAACO,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAACC,aAAa;AAC5D;;AAEA;AACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;EAC1CZ,QAAQ,CAACa,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BC,GAAG,IAAKA,GAAG,EACXC,GAAG,IAAK;IAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,WAAA,EAAAC,YAAA;IACPC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAE;MAC1BC,MAAM,EAAEP,GAAG,aAAHA,GAAG,wBAAAC,aAAA,GAAHD,GAAG,CAAEH,QAAQ,cAAAI,aAAA,uBAAbA,aAAA,CAAeM,MAAM;MAC7BC,IAAI,EAAER,GAAG,aAAHA,GAAG,wBAAAE,cAAA,GAAHF,GAAG,CAAEH,QAAQ,cAAAK,cAAA,uBAAbA,cAAA,CAAeM,IAAI;MACzBC,GAAG,EAAET,GAAG,aAAHA,GAAG,wBAAAG,WAAA,GAAHH,GAAG,CAAEU,MAAM,cAAAP,WAAA,uBAAXA,WAAA,CAAaM,GAAG;MACrBE,MAAM,EAAEX,GAAG,aAAHA,GAAG,wBAAAI,YAAA,GAAHJ,GAAG,CAAEU,MAAM,cAAAN,YAAA,uBAAXA,YAAA,CAAaO;IACvB,CAAC,CAAC;IACF,OAAOC,OAAO,CAACC,MAAM,CAACb,GAAG,CAAC;EAC5B,CACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}