{"ast":null,"code":"// src/redux/reducers/userReducer.js\n\n// Keep a stable state shape so first render never crashes.\nconst initialState = {\n  user: {\n    _id: null,\n    username: \"\",\n    email: \"\",\n    friends: [],\n    // IMPORTANT: default to array\n    expensis: [] // if mapped elsewhere, also default to array\n  }\n};\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"AddUser\":\n      {\n        // Some APIs return a partial user doc. Normalize and merge safely.\n        const doc = action.payload || {};\n        return {\n          user: {\n            // keep existing fields so we don't lose data on partial updates\n            ...state.user,\n            ...doc,\n            // ensure arrays remain arrays no matter what the payload has\n            friends: Array.isArray(doc.friends) ? doc.friends : state.user.friends || [],\n            expensis: Array.isArray(doc.expensis) ? doc.expensis : state.user.expensis || []\n          }\n        };\n      }\n\n    // Optional: explicit setter if you ever replace the user entirely\n    case \"SET_USER\":\n      {\n        const doc = action.payload || {};\n        return {\n          user: {\n            _id: doc._id || null,\n            username: doc.username || \"\",\n            email: doc.email || \"\",\n            friends: Array.isArray(doc.friends) ? doc.friends : [],\n            expensis: Array.isArray(doc.expensis) ? doc.expensis : []\n          }\n        };\n      }\n\n    // Optional: clear all user info on logout\n    case \"LOGOUT\":\n      return initialState;\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","user","_id","username","email","friends","expensis","userReducer","state","action","type","doc","payload","Array","isArray"],"sources":["/Users/queen/Downloads/Budget Tracker/client/src/redux/reducers/userReducer.js"],"sourcesContent":["// src/redux/reducers/userReducer.js\r\n\r\n// Keep a stable state shape so first render never crashes.\r\nconst initialState = {\r\n  user: {\r\n    _id: null,\r\n    username: \"\",\r\n    email: \"\",\r\n    friends: [], // IMPORTANT: default to array\r\n    expensis: [], // if mapped elsewhere, also default to array\r\n  },\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"AddUser\": {\r\n      // Some APIs return a partial user doc. Normalize and merge safely.\r\n      const doc = action.payload || {};\r\n      return {\r\n        user: {\r\n          // keep existing fields so we don't lose data on partial updates\r\n          ...state.user,\r\n          ...doc,\r\n          // ensure arrays remain arrays no matter what the payload has\r\n          friends: Array.isArray(doc.friends)\r\n            ? doc.friends\r\n            : state.user.friends || [],\r\n          expensis: Array.isArray(doc.expensis)\r\n            ? doc.expensis\r\n            : state.user.expensis || [],\r\n        },\r\n      };\r\n    }\r\n\r\n    // Optional: explicit setter if you ever replace the user entirely\r\n    case \"SET_USER\": {\r\n      const doc = action.payload || {};\r\n      return {\r\n        user: {\r\n          _id: doc._id || null,\r\n          username: doc.username || \"\",\r\n          email: doc.email || \"\",\r\n          friends: Array.isArray(doc.friends) ? doc.friends : [],\r\n          expensis: Array.isArray(doc.expensis) ? doc.expensis : [],\r\n        },\r\n      };\r\n    }\r\n\r\n    // Optional: clear all user info on logout\r\n    case \"LOGOUT\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,GAAG,EAAE,IAAI;IACTC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IAAE;IACbC,QAAQ,EAAE,EAAE,CAAE;EAChB;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,KAAK;EAC3D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MAAE;QACd;QACA,MAAMC,GAAG,GAAGF,MAAM,CAACG,OAAO,IAAI,CAAC,CAAC;QAChC,OAAO;UACLX,IAAI,EAAE;YACJ;YACA,GAAGO,KAAK,CAACP,IAAI;YACb,GAAGU,GAAG;YACN;YACAN,OAAO,EAAEQ,KAAK,CAACC,OAAO,CAACH,GAAG,CAACN,OAAO,CAAC,GAC/BM,GAAG,CAACN,OAAO,GACXG,KAAK,CAACP,IAAI,CAACI,OAAO,IAAI,EAAE;YAC5BC,QAAQ,EAAEO,KAAK,CAACC,OAAO,CAACH,GAAG,CAACL,QAAQ,CAAC,GACjCK,GAAG,CAACL,QAAQ,GACZE,KAAK,CAACP,IAAI,CAACK,QAAQ,IAAI;UAC7B;QACF,CAAC;MACH;;IAEA;IACA,KAAK,UAAU;MAAE;QACf,MAAMK,GAAG,GAAGF,MAAM,CAACG,OAAO,IAAI,CAAC,CAAC;QAChC,OAAO;UACLX,IAAI,EAAE;YACJC,GAAG,EAAES,GAAG,CAACT,GAAG,IAAI,IAAI;YACpBC,QAAQ,EAAEQ,GAAG,CAACR,QAAQ,IAAI,EAAE;YAC5BC,KAAK,EAAEO,GAAG,CAACP,KAAK,IAAI,EAAE;YACtBC,OAAO,EAAEQ,KAAK,CAACC,OAAO,CAACH,GAAG,CAACN,OAAO,CAAC,GAAGM,GAAG,CAACN,OAAO,GAAG,EAAE;YACtDC,QAAQ,EAAEO,KAAK,CAACC,OAAO,CAACH,GAAG,CAACL,QAAQ,CAAC,GAAGK,GAAG,CAACL,QAAQ,GAAG;UACzD;QACF,CAAC;MACH;;IAEA;IACA,KAAK,QAAQ;MACX,OAAON,YAAY;IAErB;MACE,OAAOQ,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}