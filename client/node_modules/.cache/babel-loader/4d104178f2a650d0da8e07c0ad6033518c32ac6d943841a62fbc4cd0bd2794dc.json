{"ast":null,"code":"var _jsxFileName = \"/Users/queen/Downloads/Budget Tracker/client/src/components/common/ChipMultiSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport \"../../styles/frndPop.css\";\n\n/**\n * ChipMultiSelect\n * props:\n *  - options: [{ email, label }]\n *  - value: array of emails\n *  - onChange: (emails[]) => void\n *  - placeholder?: string\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChipMultiSelect({\n  options = [],\n  value = [],\n  onChange,\n  placeholder = \"Type a name...\"\n}) {\n  _s();\n  const [q, setQ] = useState(\"\");\n  const selectedSet = useMemo(() => new Set(value), [value]);\n  const suggestions = useMemo(() => {\n    const needle = q.trim().toLowerCase();\n    return options.filter(o => !selectedSet.has(o.email)).filter(o => !needle || o.label.toLowerCase().includes(needle)).slice(0, 8);\n  }, [q, options, selectedSet]);\n  const add = email => {\n    if (selectedSet.has(email)) return;\n    onChange([...(value || []), email]);\n    setQ(\"\");\n  };\n  const remove = email => onChange((value || []).filter(v => v !== email));\n  const onKeyDown = e => {\n    if (e.key === \"Enter\" && suggestions[0]) {\n      e.preventDefault();\n      add(suggestions[0].email);\n    }\n    if (e.key === \"Backspace\" && !q && value.length) {\n      e.preventDefault();\n      remove(value[value.length - 1]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chips\",\n    children: [(value || []).map(v => {\n      const opt = options.find(o => o.email === v) || {\n        label: v\n      };\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chip\",\n        children: [opt.label, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chip-x\",\n          onClick: () => remove(v),\n          \"aria-label\": `Remove ${opt.label}`,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"chip-input\",\n      value: q,\n      onChange: e => setQ(e.target.value),\n      onKeyDown: onKeyDown,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), !!suggestions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chip-suggest\",\n      children: suggestions.map(s => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pill\",\n        onClick: () => add(s.email),\n        children: s.label\n      }, s.email, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ChipMultiSelect, \"71yEPvAi3StolMWyhIJSNkcDzxg=\");\n_c = ChipMultiSelect;\nvar _c;\n$RefreshReg$(_c, \"ChipMultiSelect\");","map":{"version":3,"names":["React","useMemo","useState","jsxDEV","_jsxDEV","ChipMultiSelect","options","value","onChange","placeholder","_s","q","setQ","selectedSet","Set","suggestions","needle","trim","toLowerCase","filter","o","has","email","label","includes","slice","add","remove","v","onKeyDown","e","key","preventDefault","length","className","children","map","opt","find","onClick","fileName","_jsxFileName","lineNumber","columnNumber","target","s","_c","$RefreshReg$"],"sources":["/Users/queen/Downloads/Budget Tracker/client/src/components/common/ChipMultiSelect.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport \"../../styles/frndPop.css\";\n\n/**\n * ChipMultiSelect\n * props:\n *  - options: [{ email, label }]\n *  - value: array of emails\n *  - onChange: (emails[]) => void\n *  - placeholder?: string\n */\nexport default function ChipMultiSelect({\n  options = [],\n  value = [],\n  onChange,\n  placeholder = \"Type a name...\",\n}) {\n  const [q, setQ] = useState(\"\");\n  const selectedSet = useMemo(() => new Set(value), [value]);\n\n  const suggestions = useMemo(() => {\n    const needle = q.trim().toLowerCase();\n    return options\n      .filter((o) => !selectedSet.has(o.email))\n      .filter((o) => !needle || o.label.toLowerCase().includes(needle))\n      .slice(0, 8);\n  }, [q, options, selectedSet]);\n\n  const add = (email) => {\n    if (selectedSet.has(email)) return;\n    onChange([...(value || []), email]);\n    setQ(\"\");\n  };\n  const remove = (email) => onChange((value || []).filter((v) => v !== email));\n\n  const onKeyDown = (e) => {\n    if (e.key === \"Enter\" && suggestions[0]) {\n      e.preventDefault();\n      add(suggestions[0].email);\n    }\n    if (e.key === \"Backspace\" && !q && value.length) {\n      e.preventDefault();\n      remove(value[value.length - 1]);\n    }\n  };\n\n  return (\n    <div className=\"chips\">\n      {(value || []).map((v) => {\n        const opt = options.find((o) => o.email === v) || { label: v };\n        return (\n          <span className=\"chip\" key={v}>\n            {opt.label}\n            <button\n              className=\"chip-x\"\n              onClick={() => remove(v)}\n              aria-label={`Remove ${opt.label}`}\n            >\n              Ã—\n            </button>\n          </span>\n        );\n      })}\n\n      <input\n        className=\"chip-input\"\n        value={q}\n        onChange={(e) => setQ(e.target.value)}\n        onKeyDown={onKeyDown}\n        placeholder={placeholder}\n      />\n\n      {!!suggestions.length && (\n        <div className=\"chip-suggest\">\n          {suggestions.map((s) => (\n            <button key={s.email} className=\"pill\" onClick={() => add(s.email)}>\n              {s.label}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}