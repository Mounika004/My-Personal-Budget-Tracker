{"ast":null,"code":"var _jsxFileName = \"/Users/queen/Downloads/Budget Tracker/client/src/components/Dashboard/MiddleDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddExpense from \"./popups/addExpense\";\nimport SettleUp from \"./popups/settleUp\";\nimport CategoryChart from \"./CategoryChart\";\nimport { computeFromExpenses, formatCurrency, timeAgo } from \"../../utils/finance\";\nimport { loadMe, deleteExpense } from \"../../data/meApi\";\nimport \"../../styles/dashboard.css\";\nimport EditExpense from \"./popups/EditExpense\";\nimport Confirm from \"./popups/Confirm\";\nimport { toCSV, parseCSV } from \"../../utils/csv\";\nimport { pushToast } from \"../../redux/reducers/uiReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MiddleDashboard({\n  externalShowAdd,\n  externalShowSettle,\n  onCloseAdd,\n  onCloseSettle,\n  onOpenAdd,\n  onOpenSettle\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    me,\n    expenses,\n    categories\n  } = useSelector(s => s.me);\n  const [showAdd, setShowAdd] = useState(false);\n  const [showSettle, setShowSettle] = useState(false);\n  const [editItem, setEditItem] = useState(null);\n  const [confirmDel, setConfirmDel] = useState(null);\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [catFilter, setCatFilter] = useState(\"\");\n  useEffect(() => setShowAdd(!!externalShowAdd), [externalShowAdd]);\n  useEffect(() => setShowSettle(!!externalShowSettle), [externalShowSettle]);\n  useEffect(() => {\n    dispatch(loadMe());\n  }, [dispatch]);\n  const stats = useMemo(() => computeFromExpenses(me === null || me === void 0 ? void 0 : me.email, expenses, {\n    monthFilter: month,\n    categoryFilter: catFilter || null\n  }), [me, expenses, month, catFilter]);\n  const {\n    totals,\n    recent,\n    chart\n  } = stats;\n  const openAdd = () => {\n    setShowAdd(true);\n    onOpenAdd && onOpenAdd();\n  };\n  const openSettle = () => {\n    setShowSettle(true);\n    onOpenSettle && onOpenSettle();\n  };\n  const closeAdd = () => {\n    setShowAdd(false);\n    onCloseAdd && onCloseAdd();\n    dispatch(loadMe());\n  };\n  const closeSettle = () => {\n    setShowSettle(false);\n    onCloseSettle && onCloseSettle();\n    dispatch(loadMe());\n  };\n  const exportCSV = () => {\n    const csv = toCSV(expenses);\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const a = document.createElement(\"a\");\n    a.href = URL.createObjectURL(blob);\n    a.download = \"expenses.csv\";\n    a.click();\n  };\n  const importCSV = async e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const text = await file.text();\n    const {\n      rows\n    } = parseCSV(text);\n    if (!rows.length) {\n      dispatch(pushToast(\"Empty CSV\", \"error\"));\n      return;\n    }\n    // naive import: push each as new expense (client-side); better: server bulk endpoint\n    for (const r of rows) {\n      // required: description, amount, paidBy\n      if (!r.description || !r.amount || !r.paidBy) continue;\n      await fetchImportRow(r);\n    }\n    dispatch(loadMe());\n    dispatch(pushToast(\"CSV imported\", \"success\"));\n  };\n  const fetchImportRow = async r => {\n    try {\n      await fetch(`${window._apiBase || process.env.REACT_APP_API_URL || \"http://localhost:3001/api\"}/user/expense/add`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          description: r.description,\n          amount: r.amount,\n          paidBy: r.paidBy,\n          paidTo: r.paidTo || \"\",\n          splitWith: r.splitWith || \"\",\n          category: r.category || \"Other\",\n          date: r.date || new Date().toISOString()\n        })\n      });\n    } catch {}\n  };\n  const months = Array.from({\n    length: 12\n  }, (_, i) => i);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"quick-actions\",\n      style: {\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 8,\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: month,\n          onChange: e => setMonth(Number(e.target.value)),\n          children: months.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m,\n            children: new Date(2000, m, 1).toLocaleString(\"en-US\", {\n              month: \"long\"\n            })\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: catFilter,\n          onChange: e => setCatFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: c.name,\n            children: c.name\n          }, c.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: openAdd,\n          children: \"+ Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn outline\",\n          onClick: openSettle,\n          children: \"Settle Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn ghost\",\n          onClick: exportCSV,\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"btn outline\",\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [\"Import CSV\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: importCSV,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card glass\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-top\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chip green\",\n            children: \"Total Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `big ${loading ? \"skel\" : \"\"}`,\n          children: formatCurrency(totals.totalBalance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini\",\n          children: loading ? \"Loadingâ€¦\" : \"Net of owe/owed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card glass\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-top\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chip red\",\n            children: \"You Owe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `big ${loading ? \"skel\" : \"\"}`,\n          children: formatCurrency(totals.youOwe)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini\",\n          children: loading ? \"Loadingâ€¦\" : \"What you need to pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card glass\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-top\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chip blue\",\n            children: \"Owed to You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `big ${loading ? \"skel\" : \"\"}`,\n          children: formatCurrency(totals.owedToMe)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini\",\n          children: loading ? \"Loadingâ€¦\" : \"What others owe you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card glass wide\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chip\",\n            children: \"Monthly Spend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mini\",\n            children: new Date(2000, month, 1).toLocaleString(\"en-US\", {\n              month: \"long\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar\",\n            style: {\n              width: (chart.total ? Math.min(100, chart.total / (chart.total * 1.2) * 100) : 0) + \"%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini\",\n          children: [formatCurrency(chart.total), \" (your share)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"panels\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel glass\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-head\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recent Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link\",\n            onClick: () => dispatch(loadMe()),\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skel\",\n          style: {\n            height: 120\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this) : recent.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini\",\n          children: \"No activity for filters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"activity\",\n          children: recent.map(r => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"dot blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: r.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), \" \\u2014 \", formatCurrency(r.amount)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mini\",\n              style: {\n                marginLeft: 8\n              },\n              children: [\"Paid by \", r.paidBy, \" \\u2022 \", r.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: timeAgo(r.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: 8,\n                display: \"flex\",\n                gap: 6\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn ghost\",\n                onClick: () => setEditItem(r),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn outline\",\n                onClick: () => setConfirmDel(r),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)]\n          }, r.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CategoryChart, {\n        data: chart.data,\n        total: chart.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), showAdd && /*#__PURE__*/_jsxDEV(AddExpense, {\n      onClose: closeAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }, this), showSettle && /*#__PURE__*/_jsxDEV(SettleUp, {\n      onClose: closeSettle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 22\n    }, this), editItem && /*#__PURE__*/_jsxDEV(EditExpense, {\n      item: editItem,\n      onClose: () => setEditItem(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), confirmDel && /*#__PURE__*/_jsxDEV(Confirm, {\n      title: \"Delete expense?\",\n      subtitle: confirmDel.description,\n      onCancel: () => setConfirmDel(null),\n      onConfirm: async () => {\n        await deleteExpense(confirmDel.id);\n        setConfirmDel(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(MiddleDashboard, \"PdgE1tQx3ooq+20yRpemiyrTuD8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MiddleDashboard;\nvar _c;\n$RefreshReg$(_c, \"MiddleDashboard\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","useDispatch","useSelector","AddExpense","SettleUp","CategoryChart","computeFromExpenses","formatCurrency","timeAgo","loadMe","deleteExpense","EditExpense","Confirm","toCSV","parseCSV","pushToast","jsxDEV","_jsxDEV","MiddleDashboard","externalShowAdd","externalShowSettle","onCloseAdd","onCloseSettle","onOpenAdd","onOpenSettle","_s","dispatch","loading","me","expenses","categories","s","showAdd","setShowAdd","showSettle","setShowSettle","editItem","setEditItem","confirmDel","setConfirmDel","month","setMonth","Date","getMonth","catFilter","setCatFilter","stats","email","monthFilter","categoryFilter","totals","recent","chart","openAdd","openSettle","closeAdd","closeSettle","exportCSV","csv","blob","Blob","type","a","document","createElement","href","URL","createObjectURL","download","click","importCSV","e","_e$target$files","file","target","files","text","rows","length","r","description","amount","paidBy","fetchImportRow","fetch","window","_apiBase","process","env","REACT_APP_API_URL","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","paidTo","splitWith","category","date","toISOString","months","Array","from","_","i","className","children","style","justifyContent","flexWrap","display","gap","alignItems","value","onChange","Number","map","m","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","c","name","onClick","cursor","accept","totalBalance","youOwe","owedToMe","width","total","Math","min","height","marginLeft","id","data","onClose","item","title","subtitle","onCancel","onConfirm","_c","$RefreshReg$"],"sources":["/Users/queen/Downloads/Budget Tracker/client/src/components/Dashboard/MiddleDashboard.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AddExpense from \"./popups/addExpense\";\r\nimport SettleUp from \"./popups/settleUp\";\r\nimport CategoryChart from \"./CategoryChart\";\r\nimport {\r\n  computeFromExpenses,\r\n  formatCurrency,\r\n  timeAgo,\r\n} from \"../../utils/finance\";\r\nimport { loadMe, deleteExpense } from \"../../data/meApi\";\r\nimport \"../../styles/dashboard.css\";\r\nimport EditExpense from \"./popups/EditExpense\";\r\nimport Confirm from \"./popups/Confirm\";\r\nimport { toCSV, parseCSV } from \"../../utils/csv\";\r\nimport { pushToast } from \"../../redux/reducers/uiReducer\";\r\n\r\nexport default function MiddleDashboard({\r\n  externalShowAdd,\r\n  externalShowSettle,\r\n  onCloseAdd,\r\n  onCloseSettle,\r\n  onOpenAdd,\r\n  onOpenSettle,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const { loading, me, expenses, categories } = useSelector((s) => s.me);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showSettle, setShowSettle] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n  const [confirmDel, setConfirmDel] = useState(null);\r\n  const [month, setMonth] = useState(new Date().getMonth());\r\n  const [catFilter, setCatFilter] = useState(\"\");\r\n\r\n  useEffect(() => setShowAdd(!!externalShowAdd), [externalShowAdd]);\r\n  useEffect(() => setShowSettle(!!externalShowSettle), [externalShowSettle]);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMe());\r\n  }, [dispatch]);\r\n\r\n  const stats = useMemo(\r\n    () =>\r\n      computeFromExpenses(me?.email, expenses, {\r\n        monthFilter: month,\r\n        categoryFilter: catFilter || null,\r\n      }),\r\n    [me, expenses, month, catFilter]\r\n  );\r\n  const { totals, recent, chart } = stats;\r\n\r\n  const openAdd = () => {\r\n    setShowAdd(true);\r\n    onOpenAdd && onOpenAdd();\r\n  };\r\n  const openSettle = () => {\r\n    setShowSettle(true);\r\n    onOpenSettle && onOpenSettle();\r\n  };\r\n  const closeAdd = () => {\r\n    setShowAdd(false);\r\n    onCloseAdd && onCloseAdd();\r\n    dispatch(loadMe());\r\n  };\r\n  const closeSettle = () => {\r\n    setShowSettle(false);\r\n    onCloseSettle && onCloseSettle();\r\n    dispatch(loadMe());\r\n  };\r\n\r\n  const exportCSV = () => {\r\n    const csv = toCSV(expenses);\r\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\r\n    const a = document.createElement(\"a\");\r\n    a.href = URL.createObjectURL(blob);\r\n    a.download = \"expenses.csv\";\r\n    a.click();\r\n  };\r\n\r\n  const importCSV = async (e) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const text = await file.text();\r\n    const { rows } = parseCSV(text);\r\n    if (!rows.length) {\r\n      dispatch(pushToast(\"Empty CSV\", \"error\"));\r\n      return;\r\n    }\r\n    // naive import: push each as new expense (client-side); better: server bulk endpoint\r\n    for (const r of rows) {\r\n      // required: description, amount, paidBy\r\n      if (!r.description || !r.amount || !r.paidBy) continue;\r\n      await fetchImportRow(r);\r\n    }\r\n    dispatch(loadMe());\r\n    dispatch(pushToast(\"CSV imported\", \"success\"));\r\n  };\r\n\r\n  const fetchImportRow = async (r) => {\r\n    try {\r\n      await fetch(\r\n        `${\r\n          window._apiBase ||\r\n          process.env.REACT_APP_API_URL ||\r\n          \"http://localhost:3001/api\"\r\n        }/user/expense/add`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n          body: JSON.stringify({\r\n            description: r.description,\r\n            amount: r.amount,\r\n            paidBy: r.paidBy,\r\n            paidTo: r.paidTo || \"\",\r\n            splitWith: r.splitWith || \"\",\r\n            category: r.category || \"Other\",\r\n            date: r.date || new Date().toISOString(),\r\n          }),\r\n        }\r\n      );\r\n    } catch {}\r\n  };\r\n\r\n  const months = Array.from({ length: 12 }, (_, i) => i);\r\n\r\n  return (\r\n    <main className=\"middle\">\r\n      {/* Filters + tools */}\r\n      <section\r\n        className=\"quick-actions\"\r\n        style={{ justifyContent: \"space-between\", flexWrap: \"wrap\" }}\r\n      >\r\n        <div style={{ display: \"flex\", gap: 8, alignItems: \"center\" }}>\r\n          <select\r\n            value={month}\r\n            onChange={(e) => setMonth(Number(e.target.value))}\r\n          >\r\n            {months.map((m) => (\r\n              <option key={m} value={m}>\r\n                {new Date(2000, m, 1).toLocaleString(\"en-US\", {\r\n                  month: \"long\",\r\n                })}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            value={catFilter}\r\n            onChange={(e) => setCatFilter(e.target.value)}\r\n          >\r\n            <option value=\"\">All Categories</option>\r\n            {categories.map((c) => (\r\n              <option key={c.name} value={c.name}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div style={{ display: \"flex\", gap: 8 }}>\r\n          <button className=\"btn\" onClick={openAdd}>\r\n            + Add Expense\r\n          </button>\r\n          <button className=\"btn outline\" onClick={openSettle}>\r\n            Settle Up\r\n          </button>\r\n          <button className=\"btn ghost\" onClick={exportCSV}>\r\n            Export CSV\r\n          </button>\r\n          <label className=\"btn outline\" style={{ cursor: \"pointer\" }}>\r\n            Import CSV\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv\"\r\n              onChange={importCSV}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </label>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Stat cards */}\r\n      <section className=\"cards\">\r\n        <div className=\"card glass\">\r\n          <div className=\"card-top\">\r\n            <span className=\"chip green\">Total Balance</span>\r\n          </div>\r\n          <div className={`big ${loading ? \"skel\" : \"\"}`}>\r\n            {formatCurrency(totals.totalBalance)}\r\n          </div>\r\n          <div className=\"mini\">{loading ? \"Loadingâ€¦\" : \"Net of owe/owed\"}</div>\r\n        </div>\r\n        <div className=\"card glass\">\r\n          <div className=\"card-top\">\r\n            <span className=\"chip red\">You Owe</span>\r\n          </div>\r\n          <div className={`big ${loading ? \"skel\" : \"\"}`}>\r\n            {formatCurrency(totals.youOwe)}\r\n          </div>\r\n          <div className=\"mini\">\r\n            {loading ? \"Loadingâ€¦\" : \"What you need to pay\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"card glass\">\r\n          <div className=\"card-top\">\r\n            <span className=\"chip blue\">Owed to You</span>\r\n          </div>\r\n          <div className={`big ${loading ? \"skel\" : \"\"}`}>\r\n            {formatCurrency(totals.owedToMe)}\r\n          </div>\r\n          <div className=\"mini\">\r\n            {loading ? \"Loadingâ€¦\" : \"What others owe you\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"card glass wide\">\r\n          <div className=\"card-top\">\r\n            <span className=\"chip\">Monthly Spend</span>\r\n            <span className=\"mini\">\r\n              {new Date(2000, month, 1).toLocaleString(\"en-US\", {\r\n                month: \"long\",\r\n              })}\r\n            </span>\r\n          </div>\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"bar\"\r\n              style={{\r\n                width:\r\n                  (chart.total\r\n                    ? Math.min(100, (chart.total / (chart.total * 1.2)) * 100)\r\n                    : 0) + \"%\",\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"mini\">{formatCurrency(chart.total)} (your share)</div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Panels: Recent + Chart */}\r\n      <section className=\"panels\">\r\n        <div className=\"panel glass\">\r\n          <div className=\"panel-head\">\r\n            <h3>Recent Activity</h3>\r\n            <button className=\"link\" onClick={() => dispatch(loadMe())}>\r\n              Refresh\r\n            </button>\r\n          </div>\r\n          {loading ? (\r\n            <div className=\"skel\" style={{ height: 120 }} />\r\n          ) : recent.length === 0 ? (\r\n            <div className=\"mini\">No activity for filters.</div>\r\n          ) : (\r\n            <ul className=\"activity\">\r\n              {recent.map((r) => (\r\n                <li key={r.id}>\r\n                  <span className=\"dot blue\" />\r\n                  <span>\r\n                    <b>{r.description}</b> â€” {formatCurrency(r.amount)}\r\n                  </span>\r\n                  <span className=\"mini\" style={{ marginLeft: 8 }}>\r\n                    Paid by {r.paidBy} â€¢ {r.category}\r\n                  </span>\r\n                  <span className=\"time\">{timeAgo(r.date)}</span>\r\n                  <div style={{ marginLeft: 8, display: \"flex\", gap: 6 }}>\r\n                    <button\r\n                      className=\"btn ghost\"\r\n                      onClick={() => setEditItem(r)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      className=\"btn outline\"\r\n                      onClick={() => setConfirmDel(r)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <CategoryChart data={chart.data} total={chart.total} />\r\n      </section>\r\n\r\n      {showAdd && <AddExpense onClose={closeAdd} />}\r\n      {showSettle && <SettleUp onClose={closeSettle} />}\r\n      {editItem && (\r\n        <EditExpense item={editItem} onClose={() => setEditItem(null)} />\r\n      )}\r\n      {confirmDel && (\r\n        <Confirm\r\n          title=\"Delete expense?\"\r\n          subtitle={confirmDel.description}\r\n          onCancel={() => setConfirmDel(null)}\r\n          onConfirm={async () => {\r\n            await deleteExpense(confirmDel.id);\r\n            setConfirmDel(null);\r\n          }}\r\n        />\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}