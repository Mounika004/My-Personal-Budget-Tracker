{"ast":null,"code":"const norm = s => String(s || \"\").trim().toLowerCase();\nconst parseList = s => Array.from(new Set(String(s || \"\").split(/[,\\s]+/).map(x => norm(x)).filter(Boolean)));\nfunction participantsForExpense(e) {\n  const paidBy = norm(e.paidBy);\n  const splitWith = parseList(e.splitWith);\n  let parts = splitWith.length ? splitWith : [paidBy, ...parseList(e.paidTo)];\n  if (!parts.includes(paidBy)) parts.unshift(paidBy);\n  return {\n    paidBy,\n    parts: Array.from(new Set(parts.filter(Boolean)))\n  };\n}\nconst toNumber = x => Number.isFinite(Number(x)) ? Number(x) : 0;\nexport function computeFromExpenses(myEmail, expenses, {\n  monthFilter = null,\n  categoryFilter = null\n} = {}) {\n  const me = norm(myEmail);\n  const balances = {};\n  let owedToMe = 0,\n    youOwe = 0;\n  const recent = [];\n  const now = new Date();\n  const fm = monthFilter !== null && monthFilter !== void 0 ? monthFilter : now.getMonth();\n  const fy = now.getFullYear();\n  const catTotals = {};\n  (expenses || []).forEach(e => {\n    const amt = toNumber(e.amount);\n    if (!amt) return;\n    const {\n      paidBy,\n      parts\n    } = participantsForExpense(e);\n    const share = parts.length ? amt / parts.length : 0;\n    const dt = e.date ? new Date(e.date) : null;\n    const inMonth = dt ? dt.getMonth() === fm && dt.getFullYear() === fy : true;\n    const cat = String(e.category || \"Other\");\n\n    // Filters for list/chart\n    const passCat = !categoryFilter || cat === categoryFilter;\n    recent.push({\n      description: e.description || \"Expense\",\n      amount: amt,\n      paidBy,\n      parts,\n      date: e.date || null,\n      category: cat,\n      settled: !!e.settled,\n      id: e.id,\n      type: e.type || \"expense\"\n    });\n    const iAmIn = parts.includes(me);\n    if (!iAmIn && me !== paidBy) return;\n    if (me === paidBy) {\n      parts.forEach(p => {\n        if (p === me) return;\n        balances[p] = (balances[p] || 0) + share;\n        owedToMe += share;\n      });\n      if (inMonth && passCat) catTotals[cat] = (catTotals[cat] || 0) + share;\n    } else {\n      balances[paidBy] = (balances[paidBy] || 0) - share;\n      youOwe += share;\n      if (inMonth && passCat) catTotals[cat] = (catTotals[cat] || 0) + share;\n    }\n  });\n  const totalBalance = owedToMe - youOwe;\n  const perFriend = Object.entries(balances).map(([friend, value]) => ({\n    friend,\n    value\n  })).sort((a, b) => Math.abs(b.value) - Math.abs(a.value));\n  recent.sort((a, b) => (b.date ? +new Date(b.date) : b.id ? parseInt(b.id, 36) : 0) - (a.date ? +new Date(a.date) : a.id ? parseInt(a.id, 36) : 0));\n  const recent6 = recent.slice(0, 6);\n  const chartData = Object.entries(catTotals).map(([label, value]) => ({\n    label,\n    value\n  })).sort((a, b) => b.value - a.value).slice(0, 6);\n  const chartTotal = chartData.reduce((s, x) => s + x.value, 0);\n  return {\n    totals: {\n      totalBalance,\n      youOwe,\n      owedToMe\n    },\n    perFriend,\n    recent: recent6,\n    chart: {\n      data: chartData,\n      total: chartTotal\n    }\n  };\n}\nexport function formatCurrency(n) {\n  const v = Math.round((Number(n) || 0) * 100) / 100;\n  return `₹ ${v.toLocaleString(\"en-IN\", {\n    maximumFractionDigits: 2\n  })}`;\n}\nexport function timeAgo(dateString) {\n  if (!dateString) return \"\";\n  const d = new Date(dateString);\n  const diff = (Date.now() - +d) / 1000;\n  if (diff < 60) return `${Math.floor(diff)}s ago`;\n  if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\n  if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\n  return d.toLocaleDateString();\n}","map":{"version":3,"names":["norm","s","String","trim","toLowerCase","parseList","Array","from","Set","split","map","x","filter","Boolean","participantsForExpense","e","paidBy","splitWith","parts","length","paidTo","includes","unshift","toNumber","Number","isFinite","computeFromExpenses","myEmail","expenses","monthFilter","categoryFilter","me","balances","owedToMe","youOwe","recent","now","Date","fm","getMonth","fy","getFullYear","catTotals","forEach","amt","amount","share","dt","date","inMonth","cat","category","passCat","push","description","settled","id","type","iAmIn","p","totalBalance","perFriend","Object","entries","friend","value","sort","a","b","Math","abs","parseInt","recent6","slice","chartData","label","chartTotal","reduce","totals","chart","data","total","formatCurrency","n","v","round","toLocaleString","maximumFractionDigits","timeAgo","dateString","d","diff","floor","toLocaleDateString"],"sources":["/Users/queen/Downloads/Budget Tracker/client/src/utils/finance.js"],"sourcesContent":["const norm = (s) =>\n  String(s || \"\")\n    .trim()\n    .toLowerCase();\nconst parseList = (s) =>\n  Array.from(\n    new Set(\n      String(s || \"\")\n        .split(/[,\\s]+/)\n        .map((x) => norm(x))\n        .filter(Boolean)\n    )\n  );\nfunction participantsForExpense(e) {\n  const paidBy = norm(e.paidBy);\n  const splitWith = parseList(e.splitWith);\n  let parts = splitWith.length ? splitWith : [paidBy, ...parseList(e.paidTo)];\n  if (!parts.includes(paidBy)) parts.unshift(paidBy);\n  return { paidBy, parts: Array.from(new Set(parts.filter(Boolean))) };\n}\nconst toNumber = (x) => (Number.isFinite(Number(x)) ? Number(x) : 0);\n\nexport function computeFromExpenses(\n  myEmail,\n  expenses,\n  { monthFilter = null, categoryFilter = null } = {}\n) {\n  const me = norm(myEmail);\n  const balances = {};\n  let owedToMe = 0,\n    youOwe = 0;\n\n  const recent = [];\n  const now = new Date();\n  const fm = monthFilter ?? now.getMonth();\n  const fy = now.getFullYear();\n  const catTotals = {};\n\n  (expenses || []).forEach((e) => {\n    const amt = toNumber(e.amount);\n    if (!amt) return;\n    const { paidBy, parts } = participantsForExpense(e);\n    const share = parts.length ? amt / parts.length : 0;\n    const dt = e.date ? new Date(e.date) : null;\n    const inMonth = dt ? dt.getMonth() === fm && dt.getFullYear() === fy : true;\n    const cat = String(e.category || \"Other\");\n\n    // Filters for list/chart\n    const passCat = !categoryFilter || cat === categoryFilter;\n\n    recent.push({\n      description: e.description || \"Expense\",\n      amount: amt,\n      paidBy,\n      parts,\n      date: e.date || null,\n      category: cat,\n      settled: !!e.settled,\n      id: e.id,\n      type: e.type || \"expense\",\n    });\n\n    const iAmIn = parts.includes(me);\n    if (!iAmIn && me !== paidBy) return;\n\n    if (me === paidBy) {\n      parts.forEach((p) => {\n        if (p === me) return;\n        balances[p] = (balances[p] || 0) + share;\n        owedToMe += share;\n      });\n      if (inMonth && passCat) catTotals[cat] = (catTotals[cat] || 0) + share;\n    } else {\n      balances[paidBy] = (balances[paidBy] || 0) - share;\n      youOwe += share;\n      if (inMonth && passCat) catTotals[cat] = (catTotals[cat] || 0) + share;\n    }\n  });\n\n  const totalBalance = owedToMe - youOwe;\n  const perFriend = Object.entries(balances)\n    .map(([friend, value]) => ({ friend, value }))\n    .sort((a, b) => Math.abs(b.value) - Math.abs(a.value));\n  recent.sort(\n    (a, b) =>\n      (b.date ? +new Date(b.date) : b.id ? parseInt(b.id, 36) : 0) -\n      (a.date ? +new Date(a.date) : a.id ? parseInt(a.id, 36) : 0)\n  );\n  const recent6 = recent.slice(0, 6);\n  const chartData = Object.entries(catTotals)\n    .map(([label, value]) => ({ label, value }))\n    .sort((a, b) => b.value - a.value)\n    .slice(0, 6);\n  const chartTotal = chartData.reduce((s, x) => s + x.value, 0);\n  return {\n    totals: { totalBalance, youOwe, owedToMe },\n    perFriend,\n    recent: recent6,\n    chart: { data: chartData, total: chartTotal },\n  };\n}\n\nexport function formatCurrency(n) {\n  const v = Math.round((Number(n) || 0) * 100) / 100;\n  return `₹ ${v.toLocaleString(\"en-IN\", { maximumFractionDigits: 2 })}`;\n}\nexport function timeAgo(dateString) {\n  if (!dateString) return \"\";\n  const d = new Date(dateString);\n  const diff = (Date.now() - +d) / 1000;\n  if (diff < 60) return `${Math.floor(diff)}s ago`;\n  if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\n  if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\n  return d.toLocaleDateString();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}